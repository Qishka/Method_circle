# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainmenu.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDir,QStringListModel
from uitopy.radius import Ui_Form
from uitopy.data import Ui_Dialog
from uitopy.method_type import Ui_FormMethod
import pandas as pd
import numpy as np
from scipy.optimize import minimize, NonlinearConstraint
import matplotlib.pyplot as plt

g_radius = 0
g_radiuslist = []
g_c = []
g_z = []
g_x = []
g_y = []
g_method = " "
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1075, 593)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setEnabled(False)
        self.lineEdit.setGeometry(QtCore.QRect(770, 10, 291, 51))
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(900, 70, 161, 351))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_3.setEnabled(False)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setText(f'{g_radius}')
        self.verticalLayout.addWidget(self.lineEdit_3)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_5.setEnabled(False)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.verticalLayout.addWidget(self.lineEdit_5)
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_6.setEnabled(False)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.verticalLayout.addWidget(self.lineEdit_6)
        
        self.label_6 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_6.setObjectName("label_6")
        self.verticalLayout.addWidget(self.label_6)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.verticalLayoutWidget)
        self.lineEdit_7.setEnabled(False)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.verticalLayout.addWidget(self.lineEdit_7)
       
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(70, 100, 671, 351))
        font = QtGui.QFont()
        font.setPointSize(36)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1075, 26))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menuChange = QtWidgets.QMenu(self.menubar)
        self.menuChange.setObjectName("menuChange")
        self.menuMethod = QtWidgets.QMenu(self.menubar)
        self.menuMethod.setObjectName("menuMethod")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_Open = QtWidgets.QAction(MainWindow)
        self.action_Open.setObjectName("action_Open")
        self.action_Open.triggered.connect(self.getfiles)
        self.actionRadius = QtWidgets.QAction(MainWindow)
        self.actionRadius.setObjectName("actionRadius")
        self.rad_window = Rad()
        self.data_window = Other()
        self.method_window = Method()
        self.actionRadius.triggered.connect(self.rad_window.show)
        self.actionOther = QtWidgets.QAction(MainWindow)
        self.actionOther.setObjectName("actionOther")
        self.actionOther.triggered.connect(self.data_window.show)
        self.actionChoose_method = QtWidgets.QAction(MainWindow)
        self.actionChoose_method.setObjectName("actionChoose_method")
        self.actionChoose_method.triggered.connect(self.method_window.show)
        self.menu_File.addAction(self.action_Open)
        self.menuChange.addAction(self.actionRadius)
        self.menuChange.addAction(self.actionOther)
        self.menuMethod.addAction(self.actionChoose_method)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menuChange.menuAction())
        self.menubar.addAction(self.menuMethod.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Методы круглость"))
        self.label.setText(_translate("MainWindow", "Радиус"))
        self.label_2.setText(_translate("MainWindow", "X"))
        self.label_3.setText(_translate("MainWindow", "Y"))
        
        self.label_6.setText(_translate("MainWindow", "Отклонение"))
        
        self.pushButton.setText(_translate("MainWindow", "Показать график"))
        self.pushButton.clicked.connect(self.ShowGraphic)
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menuChange.setTitle(_translate("MainWindow", "Edit"))
        self.menuMethod.setTitle(_translate("MainWindow", "Method"))
        self.action_Open.setText(_translate("MainWindow", "&Open"))
        self.actionRadius.setText(_translate("MainWindow", "Radius"))
        self.actionOther.setText(_translate("MainWindow", "Other"))
        self.actionChoose_method.setText(_translate("MainWindow", "Method type"))
    #FileDialog    
    def getfiles(self):
      dlg = QtWidgets.QFileDialog()
      dlg.setFileMode(QtWidgets.QFileDialog.AnyFile)
      dlg.setFilter(QDir.Files)
      filenames = QtCore.QStringListModel()
		
      if dlg.exec_():
        filenames = dlg.selectedFiles()
        global file_name
        file_name = filenames[0]
        print(file_name)

    def ShowGraphic(self):
        data = pd.read_excel(file_name)

        Xs = list(data['X'])
        Ys = list(data['Y'])
        
        x = np.array([0,0,10]) # x[0] = x0m; x[1] = y0m; x[2] = Rm;
   
        dmin_max = lambda x: np.max(x[2]-np.sqrt((Xs - x[0])**2+(Ys-x[1])**2))
        dmin_min = lambda x: np.min(x[2]-np.sqrt((Xs - x[0])**2+(Ys-x[1])**2))

        constraint = NonlinearConstraint(dmin_min, 0, np.inf)

        res = minimize(dmin_max, [0,0,10], method='SLSQP', constraints=constraint)
    
        x0m = round(res.x[0],3)
        y0m = round(res.x[1],3)
        Rm = round(res.x[2],2)
        dmin = round(res.fun,3)
        angle = np.linspace(0, 2 * np.pi, (len(Xs)-1)*10)

        self.lineEdit_3.setText(str(Rm))
        self.lineEdit_5.setText(str(x0m))
        self.lineEdit_6.setText(str(y0m))
        self.lineEdit_7.setText(str(dmin))

        x = Rm * np.cos(angle) + x0m
        y = Rm * np.sin(angle) + y0m

        #axes = plt.subplots(1)
        plt.gca().spines['left'].set_position('center')
        plt.gca().spines['bottom'].set_position('center')

        plt.gca().spines['right'].set_color('none')
        plt.gca().spines['top'].set_color('none')

        plt.plot(Xs,Ys)

        plt.plot(x,y)
        plt.gca().set_aspect(1)
        
        plt.title('AAAAAAAAAAAAAA')
        plt.show()
        
        print("GraphicShow")     

class Other(QtWidgets.QMainWindow):
    def __init__(self):
        super(Other,self).__init__()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)

class Rad(QtWidgets.QMainWindow):
    def __init__(self):
        super(Rad,self).__init__()
        self.ui = Ui_Form()
        self.ui.setupUi(self)
        self.ui.pushButton.clicked.connect(lambda: self.close())

class Method(QtWidgets.QMainWindow):
    def __init__(self):
        super(Method,self).__init__()
        self.ui = Ui_FormMethod()
        self.ui.setupUi(self)

def Radius_list(rlist,radius):
    for item in g_z:
        rlist.append((int(radius) - float(item)))
    return rlist
        